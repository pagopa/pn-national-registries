openapi: 3.0.3
info:
  title: InfoCamere API
  description: API to interact with InfoCamere services.
  version: 1.0.0
paths:
  /authentication:
    post:
      summary: Get authentication token
      operationId: getToken
      tags:
        - Authentication
      parameters:
        - name: client_id
          in: query
          required: false
          schema:
            type: string
          description: Client ID for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              description: JSON Web Signature (JWS) token
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
                description: Authentication token
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Unauthorized
                  code: 401
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Internal server error
                  code: 500
  /richiestaElencoPec:
    post:
      summary: Request PEC list
      operationId: callRichiestaElencoPec
      tags:
        - PEC
      parameters:
        - name: client_id
          in: query
          required: false
          schema:
            type: string
          description: Client ID for authentication
        - name: scope
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              description: Request body for PEC list
              example: |
                {
                  "requestParam1": "value1",
                  "requestParam2": "value2"
                }
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IniPecBatchResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Unauthorized
                  code: 401
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Internal server error
                  code: 500
  /getElencoPec/{identificativoRichiesta}:
    get:
      summary: Get PEC list by correlation ID
      operationId: callGetElencoPec
      tags:
        - PEC
      parameters:
        - name: identificativoRichiesta
          in: path
          required: true
          schema:
            type: string
          description: The correlation ID of the request
        - name: client_id
          in: query
          required: false
          schema:
            type: string
          description: Client ID for authentication
        - name: scope
          in: header
          required: true
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IniPecPollingResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Unauthorized
                  code: 401
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Internal server error
                  code: 500
  /sede/{cf}:
    post:
      summary: Get address by tax ID
      operationId: getAddressByTaxId
      tags:
        - Sede
      parameters:
        - name: cf
          in: path
          required: true
          schema:
            type: string
          description: Tax ID for which to retrieve the address
        - name: client_id
          in: query
          required: false
          schema:
            type: string
          description: Client ID for authentication
        - name: scope
          in: header
          required: true
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressRegistroImprese'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Unauthorized
                  code: 401
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Internal server error
                  code: 500
  /listaLegaleRappresentante/{cfPersona}:
    get:
      summary: Get legal representative list by tax ID
      operationId: getLegalRepresentativeListByTaxId
      tags:
        - LegalRepresentative
      parameters:
        - name: cfPersona
          in: path
          required: true
          schema:
            type: string
          description: Tax ID of the person
        - name: client_id
          in: query
          required: false
          schema:
            type: string
          description: Client ID for authentication
        - name: scope
          in: header
          required: true
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoCamereLegalInstituionsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Unauthorized
                  code: 401
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Internal server error
                  code: 500
  /legaleRappresentante/{cfPersona}:
    get:
      summary: Check tax ID for legal representation
      operationId: checkTaxIdForLegalRepresentation
      tags:
        - LegalRepresentation
      parameters:
        - name: cfPersona
          in: path
          required: true
          schema:
            type: string
          description: Tax ID of the person
        - name: client_id
          in: query
          required: false
          schema:
            type: string
          description: Client ID for authentication
        - name: cfImpresa
          in: query
          required: true
          schema:
            type: string
          description: VAT number of the company
        - name: scope
          in: header
          required: true
          schema:
            type: string
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoCamereVerification'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Unauthorized
                  code: 401
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                example:
                  message: Internal server error
                  code: 500
components:
  schemas:
    IniPecBatchResponse:
      type: object
      properties:
        dataOraRichiesta:
          type: string
          description: The date and time of the request
        identificativoRichiesta:
          type: string
          description: The identifier of the request
      required:
        - dataOraRichiesta
        - identificativoRichiesta
      example:
        dataOraRichiesta: "2024-05-21T12:30:00Z"
        identificativoRichiesta: "123456789"

    IniPecPollingResponse:
      type: object
      properties:
        dataOraDownload:
          type: string
          description: The date and time of the download
        identificativoRichiesta:
          type: string
          description: The identifier of the request
        elencoPec:
          type: array
          description: List of PECs
          items:
            $ref: '#/components/schemas/Pec'
        code:
          type: string
        appName:
          type: string
        description:
          type: string
        timestamp:
          type: string
      required:
        - dataOraDownload
        - identificativoRichiesta
        - elencoPec
      example:
        dataOraDownload: "2024-05-21T12:30:00Z"
        identificativoRichiesta: "123456789"
        elencoPec:
          - cf: "CF1"
            pecImpresa: "pec1@example.com"
            pecProfessionista:
              - pec: "pec1@example.com"
          - cf: "CF2"
            pecImpresa: "pec2@example.com"
            pecProfessionista:
              - pec: "pec2@example.com"
    Pec:
      type: object
      properties:
        cf:
          type: string
          description: Codice Fiscale (Tax ID)
        pecImpresa:
          type: string
          description: PEC address of the company
        pecProfessionista:
          type: array
          description: List of PEC addresses of professionals
          items:
            $ref: '#/components/schemas/PecProfessionista'
      required:
        - cf
        - pecImpresa
      example:
        cf: "CF1"
        pecImpresa: "pec1@example.com"
        pecProfessionista:
          - pec: "pec1@example.com"
    PecProfessionista:
      type: object
      properties:
        pec:
          type: string
          description: PEC address of the professional
      required:
        - pec
      example:
        pec: "pec1@example.com"

    AddressRegistroImprese:
      type: object
      properties:
        dataOraEstrazione:
          type: string
          description: The date and time of the extraction
        cf:
          type: string
          description: Tax ID (Codice Fiscale)
        indirizzoLocalizzazione:
          $ref: '#/components/schemas/LegalAddress'
        code:
          type: string
        appName:
          type: string
        description:
          type: string
        timestamp:
          type: string
      required:
        - dataOraEstrazione
        - cf
        - indirizzoLocalizzazione
      example:
        dataOraEstrazione: "2024-05-21T12:30:00Z"
        cf: "ABCDEF1234567890"
        indirizzoLocalizzazione:
          denominazione: "Company Name"
          via: "Via Roma"
          comune: "Rome"
          provincia: "RM"
          toponimo: "Toponym"
          nCivico: "123"
          cap: "00100"
    LegalAddress:
      type: object
      properties:
        denominazione:
          type: string
          description: The name of the address
        via:
          type: string
          description: The street of the address
        comune:
          type: string
          description: The municipality of the address
        provincia:
          type: string
          description: The province of the address
        toponimo:
          type: string
          description: The toponym of the address
        nCivico:
          type: string
          description: The street number of the address
        cap:
          type: string
          description: The postal code of the address
      required:
        - denominazione
        - via
        - comune
        - provincia
        - cap
      example:
        denominazione: "Company Name"
        via: "Via Roma"
        comune: "Rome"
        provincia: "RM"
        toponimo: "Toponym"
        nCivico: "123"
        cap: "00100"

    InfoCamereLegalInstituionsResponse:
      type: object
      properties:
        dataOraEstrazione:
          type: string
          description: The date and time of the extraction
        cfPersona:
          type: string
          description: Legal tax ID (Codice Fiscale) of the person
        elencoImpreseRappresentate:
          type: array
          description: List of represented businesses
          items:
            $ref: '#/components/schemas/InfoCamereInstitution'
        code:
          type: string
        appName:
          type: string
        description:
          type: string
        timestamp:
          type: string
      required:
        - dataOraEstrazione
        - cfPersona
        - elencoImpreseRappresentate
      example:
        dataOraEstrazione: "2024-05-21T12:30:00Z"
        cfPersona: "ABCDEF1234567890"
        elencoImpreseRappresentate:
          - cfImpresa: "CF1"
            denominazione: "Company Name 1"
          - cfImpresa: "CF2"
            denominazione: "Company Name 2"
    InfoCamereInstitution:
      type: object
      properties:
        cfImpresa:
          type: string
          description: Business tax ID (Codice Fiscale) of the institution
        denominazione:
          type: string
          description: The name of the institution
      required:
        - cfImpresa
        - denominazione
      example:
        cfImpresa: "CF1"
        denominazione: "Company Name 1"


    InfoCamereVerification:
      type: object
      properties:
        dataOraEstrazione:
          type: string
          description: The date and time of the extraction
        cfPersona:
          type: string
          description: Tax ID (Codice Fiscale) of the person
        cfImpresa:
          type: string
          description: VAT number (Partita IVA) of the company
        esitoVerifica:
          type: string
          description: The result of the verification
        code:
          type: string
        appName:
          type: string
        description:
          type: string
        timestamp:
          type: string
      required:
        - dataOraEstrazione
        - cfPersona
        - cfImpresa
        - esitoVerifica
      example:
        dataOraEstrazione: "2024-05-21T12:30:00Z"
        cfPersona: "ABCDEF1234567890"
        cfImpresa: "12345678901"
        esitoVerifica: "Success"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []