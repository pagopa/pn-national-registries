AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Transform:
  - UpdateDeploymentTransform

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'
  
  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  # Parametro obbligatorio (ARN del secret)
  ANPRSSLSecretName:
    Type: String
    Description: 'ANPR SecretName'

  # Parametro obbligatorio (ARN del secret)
  PDNDANPRClientAssertionSecretName:
    Type: String
    Description: 'PDND ANPR Client assertion claims'

  # Parametro obbligatorio (ARN del secret)
  PDNDANPRIntegritySecretName:
    Type: String
    Description: 'PDND ANPR Integrity certs'

Resources:

  # PN-External-Registry microservice
  ExternalRegistryMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-NationalRegistry'
        CpuValue: 1024
        MemoryAmount: 2GB
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        ContainerImageURI: !Sub '${ContainerImageUri}'
        ContainerEnvEntry1: !Sub 'AWS_REGION=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'PN_NATIONAL_REGISTRY_PDND_API_BASE_URL=${PDNDBaseURL}'
        ContainerEnvEntry3: !Sub 'PN_NATIONAL_REGISTRY_ANPR_API_BASE_URL=${ANPRBaseURL}'
        ContainerEnvEntry4: !Sub 'PN_NATIONAL_REGISTRY_ANPR_PURPOSE_ID=${ANPRPurposeId}'
        ContainerEnvEntry5: !Sub 'PN_NATIONAL_REGISTRY_AGENZIA_ENTRATE_API_BASE_URL=${AgenziaEntrateBaseURL}'
        ContainerEnvEntry6: !Sub 'PN_NATIONAL_REGISTRY_AGENZIA_ENTRATE_PURPOSE_ID=${AgenziaEntratePurposeId}'
        ContainerEnvEntry7: !Sub 'PN_NATIONAL_REGISTRY_INAD_API_BASE_URL=${INADBaseURL}'
        ContainerEnvEntry8: !Sub 'PN_NATIONAL_REGISTRY_INAD_PURPOSE_ID=${INADPurposeId}'
        ContainerEnvEntry9: !Sub 'PN_NATIONAL_REGISTRY_INIPEC_API_BASE_URL=${INIPECBaseURL}'
        ContainerEnvEntry10: !Sub 'PN_NATIONAL_REGISTRY_INIPEC_PURPOSE_ID=${INIPECPurposeId}'
        MappedPaths: '/external-registry-private/*'
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref SubnetsIds
        VpcId: !Ref VpcId
        EcsDefaultSecurityGroup: !Ref EcsDefaultSecurityGroup
        LoadBalancerListenerArn: !Ref ApplicationLoadBalancerListenerArn
        LoadbalancerRulePriority: !Ref MicroserviceNumber


  ###      KEY PAIR PER CREARE JWT NECESSARIO PER ACCEDERE AI SERVIZI M2M DI PDND    ###
  ###   La chiave viene impiegata per firmare il client assertion che serve          ###
  ###   per richedere a PDND il JWT da utilizzare per invocare i servizi M2M di PDND ###
  ######################################################################################
  PDNDSessionTokenSigningKey:
    Type: 'AWS::KMS::Key'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: RSA-2048 key to generate session token
      KeySpec: RSA_2048
      KeyUsage: SIGN_VERIFY
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'

  ANPRSSLSecretPolicy:
    Type: 'AWS::SecretsManager::ResourcePolicy'
    Properties:
      ResourcePolicy:
        Version: 2012-10-17
        Statement:
            - Sid: Enable IAM User Permissions
              Effect: Allow
              Principal:
                AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
              Action: 'secretsmanager:GetSecretValue'
              Resource: '*'
      SecretId: !Ref ANPRSSLSecretName

  PDNDANPRClientAssertionSecretPolicy:
    Type: 'AWS::SecretsManager::ResourcePolicy'
    Properties:
      ResourcePolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'secretsmanager:GetSecretValue'
            Resource: '*'
      SecretId: !Ref PDNDANPRClientAssertionSecretName

  PDNDANPRIntegritySecretPolicy:
    Type: 'AWS::SecretsManager::ResourcePolicy'
    Properties:
      ResourcePolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'secretsmanager:GetSecretValue'
            Resource: '*'
      SecretId: !Ref PDNDANPRIntegritySecretName

  # Application use this alias to access the public/private key pair
  PDNDSessionTokenSigningKeyAlias:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/${ProjectName}-national-registries-anpr-c001'
      TargetKeyId: !Ref PDNDSessionTokenSigningKey

  ###      KEY PAIR PER CREARE JWT NECESSARIO PER ACCEDERE AI SERVIZI ANPR DI PDND    ###
  ###   La chiave viene impiegata per firmare il client assertion che serve           ###
  ###   per richedere a PDND il JWT da utilizzare per invocare i servizi di ANPR      ###
  #######################################################################################
  PdndAnprSessionTokenSigningKey:
    Type: 'AWS::KMS::Key'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: RSA-2048 key to generate session token
      KeySpec: RSA_2048
      KeyUsage: SIGN_VERIFY
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'