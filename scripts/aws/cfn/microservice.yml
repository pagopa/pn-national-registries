AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Transform:
  - UpdateDeploymentTransform

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'
  
  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  PDNDBaseURL:
    Type: String
    Description: 'PDND Base URL'

  ANPRBaseURL:
    Type: String
    Description: 'ANPR Base URL'

  ANPRPurposeId:
    Type: String
    Description: 'ANPR Base Purpose ID'

  AgenziaEntrateBaseURL:
    Type: String
    Description: 'Agenzia Entrate Base URL'

  AgenziaEntratePurposeId:
    Type: String
    Description: 'Agenzia Entrate Purpose ID'

  INADBaseURL:
    Type: String
    Description: 'INAD Base URL'

  INADPurposeId:
    Type: String
    Description: 'INAD Purpose ID'

  INIPECBaseURL:
    Type: String
    Description: 'INIPEC Base URL'

  INIPECPurposeId:
    Type: String
    Description: 'INIPEC Purpose ID'

  # Parametro obbligatorio (ARN del secret)
  ANPRSSLSecretName:
    Type: String
    Description: 'ANPR SecretName'

  # Parametro obbligatorio (ARN del secret)
  PDNDANPRClientAssertionSecretName:
    Type: String
    Description: 'PDND ANPR Client assertion claims'

  # Parametro obbligatorio (ARN del secret)
  PDNDCheckCfClientAssertionSecretName:
    Type: String
    Description: 'PDND CheckCf Client assertion claims'

  # Parametro obbligatorio (ARN del secret)
  PDNDInadClientAssertionSecretName:
    Type: String
    Description: 'PDND INAD Client assertion claims'

  # Parametro obbligatorio (ARN del secret)
  PDNDANPRIntegritySecretName:
    Type: String
    Description: 'PDND ANPR Integrity certs'

  PDNDSessionTokenSigningKeyARN:
    Type: String
    Description: 'PDND Session Token Signing Key for eservice C001'

  CheckCfPDNDSessionTokenSigningKeyARN:
    Type: String
    Description: 'PDND Session Token Signing Key for eservice B001'

  InadPDNDSessionTokenSigningKeyARN:
    Type: String
    Description: 'PDND Session Token Signing Key for eservice INAD'

Resources:

  # PN-National-Registry microservice
  NationalRegistryMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        HealthCheckPath: /actuator/health
        HealthCheckTimeout: 15
        AutoscalingStrategy: REST-API
        AutoscalingThreshold: 70
        MicroServiceUniqueName: !Sub '${ProjectName}-NationalRegistry'
        CpuValue: 1024
        MemoryAmount: 2GB
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        ContainerImageURI: !Sub '${ContainerImageUri}'
        ContainerEnvEntry1: !Sub 'AWS_REGION=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'PN_NATIONAL_REGISTRY_PDND_API_BASE_URL=${PDNDBaseURL}'
        ContainerEnvEntry3: !Sub 'PN_NATIONAL_REGISTRY_ANPR_API_BASE_URL=${ANPRBaseURL}'
        ContainerEnvEntry4: !Sub 'PN_NATIONAL_REGISTRY_ANPR_PURPOSE_ID=${ANPRPurposeId}'
        ContainerEnvEntry5: !Sub 'PN_NATIONAL_REGISTRY_AGENZIA_ENTRATE_API_BASE_URL=${AgenziaEntrateBaseURL}'
        ContainerEnvEntry6: !Sub 'PN_NATIONAL_REGISTRY_AGENZIA_ENTRATE_PURPOSE_ID=${AgenziaEntratePurposeId}'
        ContainerEnvEntry7: !Sub 'PN_NATIONAL_REGISTRY_INAD_API_BASE_URL=${INADBaseURL}'
        ContainerEnvEntry8: !Sub 'PN_NATIONAL_REGISTRY_INAD_PURPOSE_ID=${INADPurposeId}'
        ContainerEnvEntry9: !Sub 'PN_NATIONAL_REGISTRY_INIPEC_API_BASE_URL=${INIPECBaseURL}'
        ContainerEnvEntry10: !Sub 'PN_NATIONAL_REGISTRY_INIPEC_PURPOSE_ID=${INIPECPurposeId}'
        MappedPaths: '/external-registry-private/*'
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref SubnetsIds
        VpcId: !Ref VpcId
        EcsDefaultSecurityGroup: !Ref EcsDefaultSecurityGroup
        LoadBalancerListenerArn: !Ref ApplicationLoadBalancerListenerArn
        LoadbalancerRulePriority: !Ref MicroserviceNumber

  ANPRSSLSecretPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ProjectName}-NationalRegistry-ANPRSSLSecretPolicy'
      Roles:
        - !GetAtt NationalRegistryMicroservice.Outputs.TaskRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Ref ANPRSSLSecretName

  PDNDANPRClientAssertionSecretPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ProjectName}-NationalRegistry-PDNDANPRClientAssertionSecretPolicy'
      Roles:
        - !GetAtt NationalRegistryMicroservice.Outputs.TaskRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Ref PDNDANPRClientAssertionSecretName

  PDNDANPRIntegritySecretPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ProjectName}-NationalRegistry-PDNDANPRIntegritySecretPolicy'
      Roles:
        - !GetAtt NationalRegistryMicroservice.Outputs.TaskRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Ref PDNDANPRIntegritySecretName

  PDNDSessionTokenSigningKeyPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ProjectName}-NationalRegistry-PDNDSessionTokenSigningKeyPolicy'
      Roles:
        - !GetAtt NationalRegistryMicroservice.Outputs.TaskRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Sign
            Resource:
              - !Ref PDNDSessionTokenSigningKeyARN
              - !Ref CheckCfPDNDSessionTokenSigningKeyARN
              - !Ref InadPDNDSessionTokenSigningKeyARN


